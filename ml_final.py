# -*- coding: utf-8 -*-
"""ML-FINAL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mqdEBsPWRBVC1Td4bhe55VYeDSYodtU5
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.models import load_model
import tensorflow as tf
from sklearn.metrics import confusion_matrix, accuracy_score
from pickle import dump,load

!rm -r ML-FINAL-EXAM//  
!git clone https://github.com/VingardiumGloriosa/ML-FINAL-EXAM

dataFrame = pd.read_csv('ML-FINAL-EXAM/b_depressed.csv')

dataFrame.head()

dataFrame.isnull().sum()
dataFrame.dropna(inplace=True)

pd.set_option('display.max_columns', None) 
X = dataFrame.iloc[:,:5] 
X.drop(columns=['Survey_id','Ville_id'], axis=1, inplace=True)
y = dataFrame.iloc[:,-1] 
print(X.iloc[0:5,:])

X = pd.get_dummies(X) 
columnNames = list(X.columns) 
X = X.values 
y = y.values

print(X.shape)
print(X)
print(y)

scaler = StandardScaler()
X = scaler.fit_transform(X)

print(X)
print(y)
print(X.shape)

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 42 )

model = Sequential()
model.add(Dense(4,activation='relu'))
model.add(Dense(5,activation='relu'))
model.add(Dense(6,activation='relu'))
model.add(Dense(1,activation='sigmoid')) 

adam = Adam(learning_rate=0.001) 
model.compile(loss='binary_crossentropy', optimizer=adam, metrics = ['accuracy'])

model.fit(X_train,y_train,epochs=100, verbose=1)

loss = model.history.history['loss']
sns.lineplot(x=range(len(loss)),y=loss)

model.evaluate(X_test,y_test)

print(columnNames)
prediction = model.predict([[0,25,1]])
print(prediction)